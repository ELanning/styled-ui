webpackJsonp([7],{1262:function(t,e,n){var a=n(5),o=n(75),r=n(551).PageRenderer;r.__esModule&&(r=r.default);var i=o({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:n(1280)}},componentWillMount:function(){},render:function(){return a.createElement(r,Object.assign({},this.props,{content:this.state.content}))}});i.__catalog_loader__=!0,t.exports=i},1280:function(t,e){t.exports="Install ag-grid to your project as a dependency. If you are developing a library, install these as peerDependencies and devDependencies.\n\n```\nyarn add ag-grid ag-grid-enterprise ag-grid-react\n```\n\nThen, import the grid into your application. Prefer to use `deltaRowDataMode` so that when state is updated the grid does not lose focus. Check out the [example code](https://github.com/Faithlife/styled-ui/tree/master/catalog/grid) in the repo or the example below.\n\n```\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-enterprise';\nimport '@faithlife/styled-ui/dist/ag-grid.css';\n\nclass MyTable extends React.Component {\n\t// Each row must have a unique identifier\n\tgetRowNodeId = data => data.guid;\n\n\t// Use object spread to clone the row being updated, or the grid won't update properly\n\tonCellValueChanged = ({ newValue, column, data }) => {\n\t\tconst rowData = [...this.state.rowData];\n\t\tconst rowIndex = rowData.findIndex(x => x === data);\n\t\tif (!rowData[rowIndex]) {\n\t\t\tthrow new Error('Could not find row');\n\t\t}\n\n\t\trowData[rowIndex] = { ...rowData[rowIndex], [column.colId]: newValue };\n\n\t\tthis.setState({\n\t\t\trowData,\n\t\t});\n\t};\n\n\t// rowData must be set via the API (not component props), or ag-grid will mutate state directly\n\tonGridReady = params => {\n\t\tthis.api = params.api;\n\t\tthis.api.setRowData(this.state.rowData);\n\t\tthis.api.sizeColumnsToFit();\n\t};\n\n\trender() {\n\t\t<div style={{ height: 525, width: '100%' }} className=\"ag-theme-faithlife\">\n\t\t\t<AgGridReact\n\t\t\t\tcolumnDefs={this.state.columnDefs}\n\t\t\t\tgetRowNodeId={this.getRowNodeId}\n\t\t\t\tonCellValueChanged={this.onCellValueChanged}\n\t\t\t\tonGridReady={this.onGridReady}\n\t\t\t\tenableColResize\n\t\t\t\tenableSorting\n\t\t\t\tenableFilter\n\t\t\t\tdeltaRowDataMode\n\t\t\t\theaderHeight=\"36\"\n\t\t\t\trowHeight=\"36\"\n\t\t\t\trowSelection=\"multiple\"\n\t\t\t\trowStyle={{ 'border-bottom': '1px solid #dbdbdb' }}\n\t\t\t/>\n\t\t</div>\n\t}\n}\n```\n"}});
//# sourceMappingURL=7.9ae20a0c.chunk.js.map